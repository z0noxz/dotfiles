#!/bin/sh

[ "$1" = "" ] && exit

get_header_index() {
    echo "$1"                                                               \
    | grep "^[0-9]*:$2$"                                                    \
    | sed "s/:.*$//"
}

# download data
data="$(curl                                                                \
    --silent    "https://mail.noxz.tech/SOGo/so/$1/Contacts/personal/view"  \
    --header    "Accept: application/json"                                  \
    --header    "Content-Type: application/json"                            \
    --user      "$(printf '%s:%s' "$1" "$(pass "/mail/$1/password")")"      \
)"

# download headers (first row contains header names)
headers="$(echo "$data"                                                     \
    | jq '.headers | .[0]'                                                  \
    | grep '^  '                                                            \
    | sed -e 's/"[,]*$//' -e 's/^  "//'                                     \
    | awk '{print NR-1 ":" $0}'                                             \
)"

# get header indices
h1="$(get_header_index "$headers" 'c_givenname')"
h2="$(get_header_index "$headers" 'c_sn')"
h3="$(get_header_index "$headers" 'c_cn')"
h4="$(get_header_index "$headers" 'c_mail')"

# parse data
i=0
alias=""
while true; do
    i="$((i+1))"
    row="$(echo "$data"                                                     \
        | jq ".headers | .[$i]"                                             \
    )"

    # break on fail or null return
    [ "$?" -ne 0 ] || [ "$row" = "null" ] && break

    alias="$alias$(echo "$row"                                              \
        | jq -r ".|.[$h1],.[$h2],.[$h3],.[$h4]"                             \
        | tr '\n' ':')\n"
done

# print generation string
printf "# this file was generated using: %s %s\n" "$0" "$@"

# print aliases
echo "$alias"                                                               \
    | sort -t ':' -k 2,2 -k 1,1                                             \
    | awk "$(cat <<'EOT'
    BEGIN {
        FS=OFS=SUBSEP=":"
        printf("unalias *\n")
    }
    $4 != "" {
        arr[$2] = sprintf("%s,%.3s%.3s", arr[$2], $1, $2)
        printf("alias %.3s%.3s %s (%s)\n", tolower($1), tolower($2), $4, $3)
    }
    END {
        printf("\n")
        for (x in arr) {
            printf("alias %s %s\n", tolower(x), tolower(substr(arr[x], 2)))
        }
    }
EOT
)"
